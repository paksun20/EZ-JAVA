/*
DDL(Data Definition Language)
데이터 정의 언어
데이터베이스 데이터를 보관하고 관리하기 위해 제공되는 객체를
생성, 변경, 삭제, 관리하는 기능을 수행
DDL은 명령을 수행하자마자 데이터베이스에 수행한 내용이 곧바로 반영
취소(ROLLBACK)를 할 수 없다.

[ 테이블 생성]
 CREATE TABLE 테이블이름( 
    컬럼명 자료형, 
    컬럼명 자료형, 
     ...   
    );

[ 테이블, 컬럼 이름 생성 규칙 ]
 1. 이름은 문자로 시작
     -> 한글도 가능
     -> 특수문자($, #, _) 가능
 2. 이름의 길이는(30바이트 이하)
 3. 이름은 중복을 허용하지 않음
    -> 테이블 이름(계정별)
    -> 컬럼 이름(테이블)
 4. SQL 키워드는 사용할 수 없다. (SELECT, INSERT, FROM, SET, ...)

[자료형]
 1. 숫자형: NUMBER(p, s) : 최대 38자리
      -> p : 전체 자리수(최대 38자리)
      -> s : 소수점이하 자리수
      예1) NUMBER(6,2) : 1234.34, 1234.567(1234.57)
      예2) NUMBER(3) : 123.4(123), 1234(오류)
      예3) NUMBER : 38 자리 확보, 1234.56, 123456
      
 2. 문자형
      -> CHAR(s) : 고정길이, 최대 2000바이트
           예1) CHAR(10) : 'ABC'를 넣으면 나머지 7자리는 공백처리
      -> VARCHAR2(s) : 가변길이, 최대 4000바이트,  문자열만 저장
      
 3. 날짜형
      -> DATE : 날짜와 시간, 고정길이 7바이트
      -> TIMESTAMP(f) : 날짜와 시간, DATE 타입의 확장
      -> INTERVAL(y) : 날짜형 데이터의 기간 저장
 4. BLOB
      -> RAW(s) : 이진 데이터, 최대 2000바이트
      -> LONG RAW : 이진 데이터, 최대 2GB
      -> LONG : 큰 문자열, 최대 2GB, 가변길이
 5. LOB
      -> BLOB : 이진파일, 최대 (4GB-1) * 블록크기
      -> BFILE: 이진 파일을 외부에 저장, 최대 4GB
      -> CLOB, NCLOB : 문자데이터, 최대 (4GB-1) * 블록크기
 6. ROW
      -> ROWID : 테이블의 행 주소
      -> UROWID : 행에 대한 논리적인 주소
      
      
   
 


*/