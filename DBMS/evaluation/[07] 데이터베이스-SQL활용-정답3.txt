-- 교수 테이블의 교수코드 참조
CREATE TABLE student (
    sno VARCHAR2(10) CONSTRAINT student_pk PRIMARY KEY, -- 메인키
    sname VARCHAR2(20),
    subject VARCHAR2(20),
    telno VARCHAR2(20),
    postcd CHAR(5),
    address VARCHAR2(50),
    professor VARCHAR2(5) REFERENCES profession(professor)
);

SELECT * FROM student;

-- student가 참조를 하고 있기 때문에 테이블을 삭제할 수 없다.
DROP TABLE profession;

DROP TABLE student;


 -- 교수 테이블
 -- professor 컬럼은 메인키(Primary Key)이거나, Unique Key로 설정되어 있어야 한다.
 CREATE TABLE profession (
    professor VARCHAR2(5) CONSTRAINT profession_pk PRIMARY KEY,
    proname VARCHAR2(20),
    subject VARCHAR2(20)
 );
DROP TABLE student;
-- 교수 테이블의 교수코드 참조
CREATE TABLE student (
    -- sno VARCHAR2(10) CONSTRAINT student_pk PRIMARY KEY, -- 메인키
    sno VARCHAR2(10),
    sname VARCHAR2(20),
    subject VARCHAR2(20),
    telno VARCHAR2(20),
    postcd CHAR(5),
    address VARCHAR2(50),
    -- 참조되는(부모) 테이블의 컬럼명이 동일하면 생략 가능
    -- professor VARCHAR2(5) REFERENCES profession

    -- 참조되는 테이블의 컬럼 타입이 동일해야 한다.    
    -- professor CHAR(5) REFERENCES profession(professor)
    
    -- 명시적으로 제약조건(참조)의 이름을 지정
    -- professor VARCHAR2(5) CONSTRAINT student_fk REFERENCES profession(professor)
    
    -- 
    professor VARCHAR2(5),
    
    -- 제약조건을 분리해서 기술
    CONSTRAINT student_pk PRIMARY KEY(sno), -- 메인키
    CONSTRAINT student_fk FOREIGN KEY(professor) REFERENCES profession(professor) -- 참조키
);

--
DROP TABLE student;

CREATE TABLE student (
    sno VARCHAR2(10) CONSTRAINT student_pk PRIMARY KEY, -- 메인키
    sname VARCHAR2(20),
    subject VARCHAR2(20),
    telno VARCHAR2(20),
    postcd CHAR(5),
    address VARCHAR2(50),
    professor VARCHAR2(5)
);

-- 참조키를 테이블에 추가
ALTER TABLE student
    ADD CONSTRAINT student_fk
    FOREIGN KEY(professor)
    REFERENCES profession(professor);

-- 참조키 삭제
ALTER TABLE student 
    DROP CONSTRAINT student_fk;    
    
    