제너릭(Generic)

1. Java5부터 지원

2. 용어의 의미
   - 제네릭 프로그래밍(영어: generic programming)은 데이터 형식에 의존하지 않고, 
     하나의 값이 여러 다른 데이터 타입들을 가질 수 있는 기술에 중점을 두어 
     재사용성을 높일 수 있는 프로그래밍 방식이다.

   - 제네릭 프로그래밍은 여러가지 유용한 소프트웨어 컴포넌트들을 
     체계적으로 융합하는 방법을 연구하는 것으로 그 목적은 알고리즘, 
     데이터 구조, 메모리 할당 메커니즘, 
     그리고 기타 여러 소프트웨어적인 장치들을 발전시켜 이들의 재사용성, 
     모듈화, 사용 편이성을 보다 높은 수준으로 끌어올리고자 하는 것이다.

3. 장점
   - 컴파일 시 강한 타입 체크를 할 수 있다.
   - 타입 변환(casting)을 제거한다.
   - 타입별로 동일한 로직에 대해서는 코드량을 줄인다.
   
   
[확인문제]
1. 제네릭에 대한 설명으로 틀린 것은?
정답: 4번
해설: public static <T> Class<T> method(T t) {}
1) 컴파일 시 강한 타입 체크를 할 수 있다.
2) 타입 변환(casting)을 제거한다.
3) 제네릭 타입은 타입 파라미터를 가지는 제네릭 클래스와 인터페이스를 말한다.
4) 제네릭 메소드는 리턴 타입으로 타입 파라미터를 가질 수 없다.

   