람다(Lambda)

1. Java8부터 지원
2. 함수적 프로그래밍
3. 병렬처리와 이벤트 지행 프로그래밍에 적합
4. 익명함수를 생성하기 위한 식
5. 코드가 간결하고 컬렉션의 요소를 필터링하거나 매핑
6. 익명 구현 객체

(함수형 프로그래밍)
1. 자료 처리를 수학적 함수의 계산으로 취급하고 상태와 가변 데이터를 멀리하는 프로그래밍 패러다임의 하나이다. 
2. 명령형 프로그래밍에서는 상태를 바꾸는 것을 강조하는 것과는 달리, 함수형 프로그래밍은 함수의 응용을 강조한다.
3. 프로그래밍이 문이 아닌 식이나 선언으로 수행되는 선언형 프로그래밍 패러다임을 따르고 있다.

(람다식 기본 문법)
   (타입 매개변수, ...) -> { 실행문; ... }
   Class class = (int a) -> { System.out.println(a) }

(익명구현객체)
   Class class = new Class() {
        @Override
        void method(int a) { System.out.println(a) } 
   };

  